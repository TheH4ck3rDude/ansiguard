- name: Set up wireguard
  hosts: vpn
  gather_facts: true
  become: true
  vars:
    wireguard_dir: "/etc/wireguard"
  vars_files:
    - vault/vpn_vault.yml
    - group_vars/vpn_dynamic_peers.yml

  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name: "{{ vpn_packages }}"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Copy wg0 config to server
      ansible.builtin.template:
        src: templates/wg0.conf.j2
        dest: "{{ wireguard_dir }}/wg0.conf"
        force: true
        mode: "0770"
      notify: "reload wireguard"

    - name: Enable IPv4 IP forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes
        
    - name: Enable IPv6 IP forwarding
      ansible.builtin.sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '1'
        state: present
        reload: yes

    - name: Allow wireguard through firewall
      community.general.ufw:
        rule: allow
        port: "{{ vpn_network.listenport }}"
        proto: udp
      notify: "ufw reload"

    - name: Allow ipv4 clients through firewall
      community.general.ufw:
        rule: allow
        from_ip: "{{ vpn_network.ipv4_subnet }}"
        direction: in
        interface: wg0
      notify: "ufw reload"

    - name: Allow ipv6 clients through firewall
      community.general.ufw:
        rule: allow
        from_ip: "{{ vpn_network.ipv6_subnet }}"
        direction: in
        interface: wg0
      notify: "ufw reload"

    - name: Enable wireguard config
      ansible.builtin.systemd:
        name: wg-quick@wg0.service
        enabled: true
        state: started

    - name: Debug Server public key
      ansible.builtin.debug:
        msg: "Server public key \n{{ vpn_server_public }}"

  handlers:
    - name: Reload ufw
      community.general.ufw:
        state: reloaded
      listen: "ufw reload"

    - name: Reload wireguard
      ansible.builtin.systemd:
        name: wg-quick@wg0.service
        state: reloaded
      listen: "reload wireguard"
